name: CI
on:
  push:
    tags: [v*]
env:
  FORCE_COLOR: 1
jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 20
      - name: Install dependencies
        run: npm ci
      - name: Run tests
        run: npm test
        env:
          VITE_AUTH_ZERO_AUDIENCE: ${{ vars.AUTH_ZERO_AUDIENCE }}
          VITE_AUTH_ZERO_DOMAIN: ${{ vars.AUTH_ZERO_DOMAIN }}
          VITE_AUTH_ZERO_CLIENT_ID: ${{ vars.AUTH_ZERO_CLIENT_ID }}
          VITE_ACTIVITY_API_BASE_URL: ${{ vars.ACTIVITY_API_BASE_URL }}
  build:
    name: Build
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 20
      - name: Install dependencies
        run: npm ci
      - name: Build app
        run: npm run build
        env:
          VITE_AUTH_ZERO_AUDIENCE: ${{ vars.AUTH_ZERO_AUDIENCE }}
          VITE_AUTH_ZERO_DOMAIN: ${{ vars.AUTH_ZERO_DOMAIN }}
          VITE_AUTH_ZERO_CLIENT_ID: ${{ vars.AUTH_ZERO_CLIENT_ID }}
          VITE_ACTIVITY_API_BASE_URL: ${{ vars.ACTIVITY_API_BASE_URL }}
          VITE_SENTRY_DSN: ${{ vars.SENTRY_DSN }}
          VITE_SENTRY_API_REGEX: ${{ vars.SENTRY_API_REGEX }}
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
      - name: Upload build
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download build
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist
      - name: Deploy to Netlify
        uses: jsmrcaga/action-netlify-deploy@v2.0.0
        with:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ vars.NETLIFY_SITE_ID }}
          NETLIFY_DEPLOY_MESSAGE: Deploy v${{ github.ref }}
          NETLIFY_DEPLOY_TO_PROD: true
          build_directory: dist
          build_command: echo "Build exists, skipping npm run build"
          install_command: echo "Install exists, skipping npm install"
  create_release:
    name: Create release
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Publish release
        uses: elgohr/Github-Release-Action@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          title: "v${{ github.ref }}"
